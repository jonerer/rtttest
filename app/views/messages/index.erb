<script>
    /*$('#new_message').on('ajax:success', function (event, data) {
     $('#messages').prepend($('<li />').text(data.text))
     })*/
    function get_updates () {
        update_start_at = new Date().getTime()
        $.ajax({
            url: '/messages?last_id=' + last_id,
            dataType: 'json',
            success: receive_updates
        })
    }

    function delayed_item(item, delay) {
        setTimeout(function() {
            $('#messages').prepend($('<li />').text(item.text))
        }, delay)
    }

    function receive_updates(data) {
        var time_taken = new Date().getTime() - update_start_at

        console.log("update took", time_taken, " data: ", data)
        var messages = data.messages
        // stagger updates to make it seem fluent
        if (messages.length) {
            var stagger_time = update_interval / messages.length;
            for (var i = 0; i < messages.length; i++) {
                delayed_item(messages[i], stagger_time * i)
            }
        }
        messages.forEach(function (item) {
            last_id = item.id // set the last_id to the last one
        })
        setTimeout(get_updates, Math.max(0, update_interval - time_taken))
    }
</script>
hey kids
<%= form_for Message.new, :remote => true do |t| -%>
    <%= t.text_field :text -%>
    <%= t.submit -%>
<%- end -%>

<ul id="messages">
    <%- @messages.reverse.each do |m| -%>
    <li><%= render m -%></li>
    <%- end -%>
</ul>
<script>
    var update_interval = 5000,
            update_start_at,
            last_id = <%= @messages.last.id -%>;

    setTimeout(get_updates, update_interval)
</script>